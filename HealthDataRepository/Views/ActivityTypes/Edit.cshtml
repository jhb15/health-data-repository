@model HealthDataRepository.Models.ActivityType

@{
    ViewData["Title"] = "Edit";
    ViewData["ActivityTypeId"] = Model.Id;
}

<h2>Edit</h2>

<h4>ActivityType</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<h1>Mappings</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                Source
            </th>
            <th>
                Mapping Key
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Mappings)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Source)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MappingKey)
            </td>
            <td>
                <a asp-controller="ActivityMappings" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<h1>Create a mapping thing</h1>
<partial model="new HealthDataRepository.Models.ActivityMapping()" name="/Views/ActivityMappings/_CreateForm.cshtml" view-data="ViewData" />

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
